---
name: CI / CD for homagix/homagix-server
on:
  push:
    tags:
      - "v*"
  pull_request:

jobs:
  build:
    name: Test, build and push to Dockerhub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@12cce9efe0d49980455aaaca9b071c0befcdd702 # tag=v4
        with:
          images: joschi64/homagix-server

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@969bd2663942d722d85b6a8626225850c2f7be4b # tag=v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build frontend files
        run: npm run build --if-present

      - name: Test
        run: npm test
        env:
          CI: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@95cb08cb2672c73d4ffd2f422e6d11953d2a9c70 # tag=v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # tag=v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5 # tag=v3
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Webhook
        uses: joelwmale/webhook-action@95178766b20f285c6817b7a66b023da74db9f2ec
        with:
          url: ${{ secrets.UPDATE_WEBHOOK }}
