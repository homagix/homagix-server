---
name: CI / CD for homagix/homagix-server
on:
  push:
    tags:
      - "v*"
  pull_request:

jobs:
  build:
    name: Test, build and push to Dockerhub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a # tag=v4
        with:
          images: joschi64/homagix-server

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@eeb10cff27034e7acf239c5d29f62154018672fd # tag=v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build frontend files
        run: npm run build --if-present

      - name: Test
        run: npm test
        env:
          CI: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # tag=v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # tag=v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8 # tag=v3
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Webhook
        uses: joelwmale/webhook-action@945fe11390a30403642b7ce5980fdbcbe4365c27
        with:
          url: ${{ secrets.UPDATE_WEBHOOK }}
